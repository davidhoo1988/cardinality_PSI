

# This file was *autogenerated* from the file error_estimate.sage
from sage.all_cmdline import *   # import sage library

_sage_const_700 = Integer(700); _sage_const_2 = Integer(2); _sage_const_62 = Integer(62); _sage_const_65535 = Integer(65535); _sage_const_38 = Integer(38); _sage_const_12 = Integer(12); _sage_const_6 = Integer(6); _sage_const_11 = Integer(11); _sage_const_3p2 = RealNumber('3.2'); _sage_const_13 = Integer(13); _sage_const_64 = Integer(64); _sage_const_0 = Integer(0); _sage_const_3 = Integer(3); _sage_const_1 = Integer(1)# FDFB system parameters (assume the minimal 80 bit security level)
## LWE parameters
n = _sage_const_700 
Q = _sage_const_2 **_sage_const_62 -_sage_const_65535 
sigma = _sage_const_2 **_sage_const_38 
q = _sage_const_2 **_sage_const_12 
t = _sage_const_2 **_sage_const_6 
## Ring-GSW parameters
N = _sage_const_2 **_sage_const_11 
stigma = _sage_const_3p2 
## Gadget Matrix
L_RGSW = _sage_const_2 **_sage_const_11 
l_RGSW = ceil(log(q, L_RGSW))
## Bootstrapping Key Parameters
L_boot = _sage_const_2 **_sage_const_11 
l_boot = ceil(log(Q, L_boot))
# Key Switching Key Parameters
L_ksK = _sage_const_2 **_sage_const_6 
l_ksK = ceil(log(q, L_ksK))
L_pK = _sage_const_2 **_sage_const_13 
l_pK = ceil(log(Q, L_pK))

Ham_s = _sage_const_64 
E_s = Ham_s/N
Var_s =  Ham_s/N - (Ham_s/N)**_sage_const_2 

# standard deviation of the final error err(Refresh(c)), modelled as Gaussian distribution
sigma_F = _sage_const_0 ;
sigma_BR = _sage_const_0 ;
sigma_KS = _sage_const_0 ;

beta = sqrt( (q**_sage_const_2 )/(Q**_sage_const_2 ) * (sigma_F**_sage_const_2  + sigma_BR**_sage_const_2  + sigma_KS**_sage_const_2 ) + _sage_const_2 /_sage_const_3  + _sage_const_2 /_sage_const_3 *Ham_s*(Var_s + E_s**_sage_const_2 ) )
# beta = 6.94
# error probability per NAND
r = q/(t*beta)
p = int(log(_sage_const_1  - erf(r/sqrt(_sage_const_2 )), _sage_const_2 ))
# p = 1 - erf(r/sqrt(2))

print (beta)
print (p)

